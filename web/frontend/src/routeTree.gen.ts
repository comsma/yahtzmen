/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StoreImport } from './routes/_store'
import { Route as AdminImport } from './routes/_admin'
import { Route as StoreIndexImport } from './routes/_store/index'
import { Route as StorePrivacyImport } from './routes/_store/privacy'
import { Route as AdminAdminIndexImport } from './routes/_admin/admin/index'
import { Route as StorecheckoutCheckoutImport } from './routes/_store/(checkout)/checkout'
import { Route as StoreproductProductProductIdImport } from './routes/_store/(product)/product.$productId'
import { Route as AdminAdmindashboardDashboardImport } from './routes/_admin/admin/(dashboard)/dashboard'
import { Route as AdminAdminproductProductIndexImport } from './routes/_admin/admin/(product)/product.index'
import { Route as AdminAdminproductProductNewImport } from './routes/_admin/admin/(product)/product.new'
import { Route as AdminAdminproductProductProductIdDetailsImport } from './routes/_admin/admin/(product)/product.$productId._details'
import { Route as AdminAdminproductProductProductIdDetailsViewImport } from './routes/_admin/admin/(product)/product.$productId._details.view'
import { Route as AdminAdminproductProductProductIdDetailsEditImport } from './routes/_admin/admin/(product)/product.$productId._details.edit'

// Create Virtual Routes

const AdminAdminproductProductProductIdImport = createFileRoute(
  '/_admin/admin/(product)/product/$productId',
)()

// Create/Update Routes

const StoreRoute = StoreImport.update({
  id: '/_store',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const StoreIndexRoute = StoreIndexImport.update({
  path: '/',
  getParentRoute: () => StoreRoute,
} as any)

const StorePrivacyRoute = StorePrivacyImport.update({
  path: '/privacy',
  getParentRoute: () => StoreRoute,
} as any)

const AdminAdminIndexRoute = AdminAdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => AdminRoute,
} as any)

const StorecheckoutCheckoutRoute = StorecheckoutCheckoutImport.update({
  path: '/checkout',
  getParentRoute: () => StoreRoute,
} as any)

const StoreproductProductProductIdRoute =
  StoreproductProductProductIdImport.update({
    path: '/product/$productId',
    getParentRoute: () => StoreRoute,
  } as any)

const AdminAdmindashboardDashboardRoute =
  AdminAdmindashboardDashboardImport.update({
    path: '/admin/dashboard',
    getParentRoute: () => AdminRoute,
  } as any)

const AdminAdminproductProductProductIdRoute =
  AdminAdminproductProductProductIdImport.update({
    path: '/admin/product/$productId',
    getParentRoute: () => AdminRoute,
  } as any)

const AdminAdminproductProductIndexRoute =
  AdminAdminproductProductIndexImport.update({
    path: '/admin/product/',
    getParentRoute: () => AdminRoute,
  } as any)

const AdminAdminproductProductNewRoute =
  AdminAdminproductProductNewImport.update({
    path: '/admin/product/new',
    getParentRoute: () => AdminRoute,
  } as any)

const AdminAdminproductProductProductIdDetailsRoute =
  AdminAdminproductProductProductIdDetailsImport.update({
    id: '/_details',
    getParentRoute: () => AdminAdminproductProductProductIdRoute,
  } as any)

const AdminAdminproductProductProductIdDetailsViewRoute =
  AdminAdminproductProductProductIdDetailsViewImport.update({
    path: '/view',
    getParentRoute: () => AdminAdminproductProductProductIdDetailsRoute,
  } as any)

const AdminAdminproductProductProductIdDetailsEditRoute =
  AdminAdminproductProductProductIdDetailsEditImport.update({
    path: '/edit',
    getParentRoute: () => AdminAdminproductProductProductIdDetailsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_store': {
      preLoaderRoute: typeof StoreImport
      parentRoute: typeof rootRoute
    }
    '/_store/privacy': {
      preLoaderRoute: typeof StorePrivacyImport
      parentRoute: typeof StoreImport
    }
    '/_store/': {
      preLoaderRoute: typeof StoreIndexImport
      parentRoute: typeof StoreImport
    }
    '/_store/(checkout)/checkout': {
      preLoaderRoute: typeof StorecheckoutCheckoutImport
      parentRoute: typeof StoreImport
    }
    '/_admin/admin/': {
      preLoaderRoute: typeof AdminAdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/(dashboard)/dashboard': {
      preLoaderRoute: typeof AdminAdmindashboardDashboardImport
      parentRoute: typeof AdminImport
    }
    '/_store/(product)/product/$productId': {
      preLoaderRoute: typeof StoreproductProductProductIdImport
      parentRoute: typeof StoreImport
    }
    '/_admin/admin/(product)/product/new': {
      preLoaderRoute: typeof AdminAdminproductProductNewImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/(product)/product/': {
      preLoaderRoute: typeof AdminAdminproductProductIndexImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/(product)/product/$productId': {
      preLoaderRoute: typeof AdminAdminproductProductProductIdImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/(product)/product/$productId/_details': {
      preLoaderRoute: typeof AdminAdminproductProductProductIdDetailsImport
      parentRoute: typeof AdminAdminproductProductProductIdRoute
    }
    '/_admin/admin/(product)/product/$productId/_details/edit': {
      preLoaderRoute: typeof AdminAdminproductProductProductIdDetailsEditImport
      parentRoute: typeof AdminAdminproductProductProductIdDetailsImport
    }
    '/_admin/admin/(product)/product/$productId/_details/view': {
      preLoaderRoute: typeof AdminAdminproductProductProductIdDetailsViewImport
      parentRoute: typeof AdminAdminproductProductProductIdDetailsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  AdminRoute.addChildren([
    AdminAdminIndexRoute,
    AdminAdmindashboardDashboardRoute,
    AdminAdminproductProductNewRoute,
    AdminAdminproductProductIndexRoute,
    AdminAdminproductProductProductIdRoute.addChildren([
      AdminAdminproductProductProductIdDetailsRoute.addChildren([
        AdminAdminproductProductProductIdDetailsEditRoute,
        AdminAdminproductProductProductIdDetailsViewRoute,
      ]),
    ]),
  ]),
  StoreRoute.addChildren([
    StorePrivacyRoute,
    StoreIndexRoute,
    StorecheckoutCheckoutRoute,
    StoreproductProductProductIdRoute,
  ]),
])

/* prettier-ignore-end */
