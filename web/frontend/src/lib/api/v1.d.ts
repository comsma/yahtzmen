/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/admin/product": {
    /** Get all products */
    get: operations["adminGetProducts"];
    /** Create a new product */
    post: operations["adminCreateProduct"];
  };
  "/admin/product/{id}": {
    /** Get a product by ID */
    get: operations["adminGetProductById"];
    /** Delete a product */
    delete: operations["adminDeleteProduct"];
  };
  "/admin/product/{id}/image": {
    /** Get all images for a product */
    get: operations["adminGetProductImages"];
  };
  "/checkout/session": {
    /** Create a checkout session */
    post: operations["createCheckoutSession"];
  };
  "/admin/products/{id}/image": {
    /** Upload product image */
    post: operations["uploadProductImage"];
  };
  "/products": {
    /** Get all products */
    get: operations["getProducts"];
    /** Create a new product */
    post: operations["createProduct"];
  };
  "/store/products": {
    /** Get all store products */
    get: operations["listStoreProducts"];
  };
  "/store/products/{id}": {
    /** Get store product by ID */
    get: operations["getStoreProductById"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Error: {
      code?: number;
      message?: string;
    };
    CheckoutSession: {
      clientSecret?: string;
    };
    Cart: {
      products?: components["schemas"]["CartItem"][];
    };
    NewAdminProduct: {
      name: string;
      price: number;
      description: string;
      features: string;
      notes: string;
      dimensions: string;
      isLive: boolean;
    };
    AdminProductPreview: {
      image_url: string;
      id: string;
      name: string;
      price: number;
      isLive: boolean;
    };
    AdminProduct: {
      id: string;
      name: string;
      price: number;
      description: string;
      features: string;
      notes: string;
      dimensions: string;
      isLive: boolean;
      createdAt: string;
    };
    BaseProduct: {
      id: string;
      name: string;
      price: number;
    };
    CartItem: {
      id: string;
      quantity: number;
    };
    ProductImage: {
      id: string;
      url: string;
      order: number;
    };
    StoreProductPreview: {
      id: string;
      name: string;
      price: number;
      image: components["schemas"]["ProductImage"];
    };
    StoreProduct: {
      id?: string;
      name?: string;
      price?: number;
      description?: string;
      features?: string;
      notes?: string;
      dimensions?: string;
      images: components["schemas"]["ProductImage"][];
    };
    NewProduct: {
      name: string;
      description: string;
      price: number;
      features: string;
      notes: string;
      dimensions: string;
    };
    ProductWithImage: components["schemas"]["Product"] & {
      primaryImage?: {
        id?: string;
        url?: string;
      };
    };
    Product: {
      id?: string;
      name?: string;
      price?: number;
      description?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Get all products */
  adminGetProducts: {
    responses: {
      /** @description A list of products.ts */
      200: {
        content: {
          "application/json": components["schemas"]["AdminProductPreview"][];
        };
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create a new product */
  adminCreateProduct: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NewAdminProduct"];
      };
    };
    responses: {
      /** @description Product created */
      201: {
        content: {
          "application/json": components["schemas"]["BaseProduct"];
        };
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Get a product by ID */
  adminGetProductById: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description A product */
      200: {
        content: {
          "application/json": components["schemas"]["AdminProduct"];
        };
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Delete a product */
  adminDeleteProduct: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Product deleted */
      200: {
        content: never;
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Get all images for a product */
  adminGetProductImages: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description A list of images */
      200: {
        content: {
          "application/json": components["schemas"]["ProductImage"][];
        };
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create a checkout session */
  createCheckoutSession: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["Cart"];
      };
    };
    responses: {
      /** @description Payment intent created */
      200: {
        content: {
          "application/json": components["schemas"]["CheckoutSession"];
        };
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Upload product image */
  uploadProductImage: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": {
          /** Format: binary */
          file?: string;
        };
      };
    };
    responses: {
      /** @description Image uploaded */
      200: {
        content: never;
      };
    };
  };
  /** Get all products */
  getProducts: {
    responses: {
      /** @description A list of products.ts */
      200: {
        content: {
          "application/json": components["schemas"]["ProductWithImage"][];
        };
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create a new product */
  createProduct: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["NewProduct"];
      };
    };
    responses: {
      /** @description Product created */
      201: {
        content: {
          "application/json": components["schemas"]["Product"];
        };
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Get all store products */
  listStoreProducts: {
    responses: {
      /** @description A list of store products */
      200: {
        content: {
          "application/json": components["schemas"]["StoreProductPreview"][];
        };
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Get store product by ID */
  getStoreProductById: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description A product */
      200: {
        content: {
          "application/json": components["schemas"]["StoreProduct"];
        };
      };
      /** @description Unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
}
